syntax = "proto3";

package broker_service;

service BrokerService {
    rpc CreateTopic (CreateTopicRequest) returns (CreateTopicResponse);
    rpc Subscribe (SubscribeRequest) returns (SubscribeResponse);
    rpc Unsubscribe (UnsubscribeRequest) returns (UnsubscribeResponse);
    rpc Post (PostRequest) returns (PostResponse);
    rpc Fetch (FetchRequest) returns (FetchResponse);
    rpc Ack (AckRequest) returns (AckResponse);
}

message CreateTopicRequest {
    string name = 1;
}

message CreateTopicResponse {
    string message = 1;
}

message SubscribeRequest {
    string topic_name = 1;
    string client_id = 2;
}

message SubscribeResponse {
    string message = 1;
}

message UnsubscribeRequest {
    string topic_name = 1;
    string client_id = 2;
}

message UnsubscribeResponse {
    string message = 1;
}

message ProtoMsg {
    string payload = 1;
    string id = 2;
}

message ProtoTopic {
    string name = 1;
    repeated string subscribers = 2;
    repeated ProtoMsg msgs = 3;
}

message ProtoBroker {
    map<string, ProtoTopic> topics = 1;
    map<string, ProtoAckedMsgs> acked_msgs = 2;
}

message ProtoAckedMsgs {
    repeated string messages = 1;
}

message PostRequest {
    string topic_name = 1;
    string payload = 2;
}

message PostResponse {
    string message = 1;
}

message FetchRequest {
    string client_id = 1;
}

message FetchResponse {
    repeated ProtoMsg msgs = 1;
}

message AckRequest {
    string msg_id = 1;
    string client_id = 2;
}

message AckResponse {
    string message = 1;
}